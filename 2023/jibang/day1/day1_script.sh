#!/bin/bash

echo -e "\033[32m"---------- 1\-1 ----------"\033[0m"
echo -e "\033[32m"10.0.0.0/16이 출력되는지 확인합니다."\033[0m"
aws ec2 describe-vpcs --filter Name=tag:Name,Values=wsi-vpc --query "Vpcs[].CidrBlock"
echo -e "\n"

echo -e "\033[32m"---------- 1\-2 ----------"\033[0m"
echo -e "\033[32m"10.0.1.0/24이 출력되는지 확인합니다."\033[0m"
aws ec2 describe-subnets --filter Name=tag:Name,Values=wsi-public-a --query "Subnets[].CidrBlock"
echo -e "\033[32m"10.0.2.0/24이 출력되는지 확인합니다."\033[0m"
aws ec2 describe-subnets --filter Name=tag:Name,Values=wsi-public-b --query "Subnets[].CidrBlock"
echo -e "\033[32m"10.0.3.0/24이 출력되는지 확인합니다."\033[0m"
aws ec2 describe-subnets --filter Name=tag:Name,Values=wsi-private-a --query "Subnets[].CidrBlock"
echo -e "\033[32m"10.0.4.0/24이 출력되는지 확인합니다."\033[0m"
aws ec2 describe-subnets --filter Name=tag:Name,Values=wsi-private-b --query "Subnets[].CidrBlock"
echo -e "\n"

echo -e "\033[32m"---------- 1\-3 ----------"\033[0m"
echo -e "\033[32m"igw-로 시작하는 문구가 출력되는지 확인합니다."\033[0m"
aws ec2 describe-internet-gateways --filter Name=tag:Name,Values=wsi-igw --query "InternetGateways[].InternetGatewayId"
echo -e "\033[32m"igw-로 시작하는 문구가 출력되는지 확인합니다."\033[0m"
aws ec2 describe-route-tables --filter Name=tag:Name,Values=wsi-public-rtb --query "RouteTables[].Routes[].GatewayId"
echo -e "\n"

echo -e "\033[32m"---------- 1\-4 ----------"\033[0m"
echo -e "\033[32m"nat-로 시작하는 문구가 출력되는지 확인합니다."\033[0m"
aws ec2 describe-route-tables --filter Name=tag:Name,Values=wsi-private-rtb-a --query "RouteTables[].Routes[].NatGatewayId"
echo -e "\033[32m"nat-로 시작하는 문구가 출력되는지 확인합니다. \(단, 이전 문구와는 달라야 합니다.\)"\033[0m"
aws ec2 describe-route-tables --filter Name=tag:Name,Values=wsi-private-rtb-b --query "RouteTables[].Routes[].NatGatewayId"
echo -e "\n"

echo -e "\033[32m"---------- 1\-5 ----------"\033[0m"
echo -e "\033[32m"ap-northeast-2a가 출력되는지 확인합니다."\033[0m"
aws ec2 describe-subnets --filter Name=tag:Name,Values=wsi-public-a --query "Subnets[].AvailabilityZone"
echo -e "\033[32m"ap-northeast-2b가 출력되는지 확인합니다."\033[0m"
aws ec2 describe-subnets --filter Name=tag:Name,Values=wsi-public-b --query "Subnets[].AvailabilityZone"
echo -e "\033[32m"ap-northeast-2a가 출력되는지 확인합니다."\033[0m"
aws ec2 describe-subnets --filter Name=tag:Name,Values=wsi-private-a --query "Subnets[].AvailabilityZone"
echo -e "\033[32m"ap-northeast-2b가 출력되는지 확인합니다."\033[0m"
aws ec2 describe-subnets --filter Name=tag:Name,Values=wsi-private-b --query "Subnets[].AvailabilityZone"
echo -e "\n"

echo -e "\033[32m"---------- 2\-1 ----------"\033[0m"
echo -e "\033[32m"i-로 시작하는 문구가 출력되는지 확인합니다."\033[0m"
aws ec2 describe-instances --filter Name=tag:Name,Values=wsi-bastion --query "Reservations[].Instances[].InstanceId"
echo -e "\n"

echo -e "\033[32m"---------- 2\-2 ----------"\033[0m"
echo -e "\033[32m"동일한 IP가 최소 2개 출력되는지 확인합니다."\033[0m"
aws ec2 describe-instances --filter Name=tag:Name,Values=wsi-bastion --query "Reservations[].Instances[].PublicIpAddress"
aws ec2 describe-addresses --query "Addresses[].PublicIp"
echo -e "\n"

echo -e "\033[32m"---------- 3\-1 ----------"\033[0m"
echo -e "\033[32m"latest가 출력되는지 확인합니다."\033[0m"
aws ecr describe-images --repository-name wsi-about --query "imageDetails[].imageTags[]"
echo -e "\033[32m"latest가 출력되는지 확인합니다."\033[0m"
aws ecr describe-images --repository-name wsi-projects --query "imageDetails[].imageTags[]"
echo -e "\n"

echo -e "\033[32m"---------- 3\-2 ----------"\033[0m"
echo -e "\033[32m"CRITICAL, HIGH, MEDIUM, LOW 중 어떤 것도 출력되지 않는지 확인합니다."\033[0m"
aws ecr describe-image-scan-findings --repository-name wsi-about --image-id imageTag=latest --query "imageScanFindings.findingSeverityCounts"
echo -e "\033[32m"CRITICAL, HIGH, MEDIUM, LOW 중 어떤 것도 출력되지 않는지 확인합니다."\033[0m"
aws ecr describe-image-scan-findings --repository-name wsi-projects --image-id imageTag=latest --query "imageScanFindings.findingSeverityCounts"
echo -e "\n"

echo -e "\033[32m"---------- 4\-1 ----------"\033[0m"
echo -e "\033[32m"wsi-ecs가 출력되는지 확인합니다."\033[0m"
aws ecs describe-clusters --cluster wsi-ecs --query "clusters[].clusterName"
echo -e "\033[32m"FARGATE, FARGATE_SPOT이 출력되는지 확인합니다."\033[0m"
aws ecs describe-clusters --cluster wsi-ecs --query "clusters[].capacityProviders[]"
echo -e "\n"

echo -e "\033[32m"---------- 4\-2 ----------"\033[0m"
echo -e "\033[32m"5000이 출력되는지 확인합니다."\033[0m"
aws ecs describe-task-definition --task-definition about-task-def --query "taskDefinition.containerDefinitions[].portMappings[].containerPort"
echo -e "\033[32m"계정ID.dkr.ecr.ap-northeast-2.amazonaws.com/wsi-about:latest가 출력되는지 확인합니다."\033[0m"
aws ecs describe-task-definition --task-definition about-task-def --query "taskDefinition.containerDefinitions[].image"
echo -e "\033[32m"5000이 출력되는지 확인합니다."\033[0m"
aws ecs describe-task-definition --task-definition projects-task-def --query "taskDefinition.containerDefinitions[].portMappings[].containerPort"
echo -e "\033[32m"계정ID.dkr.ecr.ap-northeast-2.amazonaws.com/wsi-projects:latest"\033[0m"
aws ecs describe-task-definition --task-definition projects-task-def --query "taskDefinition.containerDefinitions[].image"
echo -e "\n"

echo -e "\033[32m"---------- 4\-3 ----------"\033[0m"
echo -e "\033[32m"DISABLED가 출력되는지 확인합니다."\033[0m"
aws ecs describe-services --cluster wsi-ecs --services wsi-about-svc --query "services[].networkConfiguration.awsvpcConfiguration.assignPublicIp"
echo -e "\033[32m"FARGATE가 출력되는지 확인합니다."\033[0m"
aws ecs describe-services --cluster wsi-ecs --services wsi-about-svc --query "services[].launchType"
echo -e "\033[32m"ACTIVE가 출력되는지 확인합니다."\033[0m"
aws ecs describe-services --cluster wsi-ecs --services wsi-about-svc --query "services[].status"
echo -e "\033[32m"DISABLED가 출력되는지 확인합니다."\033[0m"
aws ecs describe-services --cluster wsi-ecs --services wsi-projects-svc --query "services[].networkConfiguration.awsvpcConfiguration.assignPublicIp"
echo -e "\033[32m"FARGATE가 출력되는지 확인합니다."\033[0m"
aws ecs describe-services --cluster wsi-ecs --services wsi-projects-svc --query "services[].launchType"
echo -e "\033[32m"ACTIVE가 출력되는지 확인합니다."\033[0m"
aws ecs describe-services --cluster wsi-ecs --services wsi-projects-svc --query "services[].status"
echo -e "\n"

echo -e "\033[32m"---------- 4\-4 ----------"\033[0m"
echo -e "\033[32m"2 이상의 숫자가 출력되는지 확인합니다."\033[0m"
aws ecs describe-clusters --cluster wsi-ecs --query "clusters[].runningTasksCount"
echo -e "\n"

echo -e "\033[32m"---------- 4\-5 ----------"\033[0m"
echo -e "\033[32m"4 이상의 숫자가 출력되는지 확인합니다."\033[0m"
aws ecs describe-clusters --cluster wsi-ecs --query "clusters[].runningTasksCount"
echo -e "\033[32m"subnet-로 시작하는 문자열이 2개 이상 출력되는지 확인합니다."\033[0m"
aws ecs describe-services --cluster wsi-ecs --services wsi-about-svc --query "services[].networkConfiguration.awsvpcConfiguration[].subnets[]"
echo -e "\033[32m"2 이상의 숫자가 출력되는지 확인합니다."\033[0m"
aws ecs describe-services --cluster wsi-ecs --services wsi-about-svc --query "services[].runningCount"
echo -e "\033[32m"subnet-로 시작하는 문자열이 2개 이상 출력되는지 확인합니다."\033[0m"
aws ecs describe-services --cluster wsi-ecs --services wsi-projects-svc --query "services[].networkConfiguration.awsvpcConfiguration[].subnets[]"
echo -e "\033[32m"2 이상의 숫자가 출력되는지 확인합니다."\033[0m"
aws ecs describe-services --cluster wsi-ecs --services wsi-projects-svc --query "services[].runningCount"
echo -e "\n"

echo -e "\033[32m"---------- 4\-6 ----------"\033[0m"
echo -e "\033[32m"문자열 3개가 서로 일치하는지 확인합니다."\033[0m"
aws elbv2 describe-load-balancers --query "LoadBalancers[].SecurityGroups[]"
aws ec2 describe-security-groups --query "SecurityGroups[?GroupName=='wsi-about-sg'].IpPermissions[].UserIdGroupPairs[].GroupId"
aws ec2 describe-security-groups --query "SecurityGroups[?GroupName=='wsi-projects-sg'].IpPermissions[].UserIdGroupPairs[].GroupId"
echo -e "\n"

echo -e "\033[32m"---------- 5\-1 ----------"\033[0m"
echo -e "\033[32m"wsi-alb가 출력되는지 확인합니다."\033[0m"
aws elbv2 describe-load-balancers --query "LoadBalancers[?LoadBalancerName=='wsi-alb'].LoadBalancerName"
echo -e "\033[32m"internet-facing이 출력되는지 확인합니다."\033[0m"
aws elbv2 describe-load-balancers --query "LoadBalancers[?LoadBalancerName=='wsi-alb'].Scheme"
echo -e "\033[32m"application이 출력되는지 확인합니다."\033[0m"
aws elbv2 describe-load-balancers --query "LoadBalancers[?LoadBalancerName=='wsi-alb'].Type"
echo -e "\033[32m"ap-northeast-2a, ap-northeast-2b가 출력되는지 확인합니다."\033[0m"
aws elbv2 describe-load-balancers --query "LoadBalancers[?LoadBalancerName=='wsi-alb'].AvailabilityZones[].ZoneName"
echo -e "\n"

echo -e "\033[32m"---------- 5\-2 ----------"\033[0m"
alb_arn=`aws elbv2 describe-load-balancers --query "LoadBalancers[?LoadBalancerName=='wsi-alb'].LoadBalancerArn" --output text`
echo -e "\033[32m"HTTP가 출력되는지 확인합니다."\033[0m"
aws elbv2 describe-listeners --load-balancer-arn $alb_arn --query "Listeners[].Protocol"
echo -e "\033[32m"80이 출력되는지 확인합니다."\033[0m"
aws elbv2 describe-listeners --load-balancer-arn $alb_arn --query "Listeners[].Port"
echo -e "\n"

echo -e "\033[32m"---------- 5\-3 ----------"\033[0m"
alb_dns=`aws elbv2 describe-load-balancers --query "LoadBalancers[?LoadBalancerName=='wsi-alb'].DNSName" --output text`
echo -e "\033[32m"403 Forbidden이 출력되는지 확인합니다."\033[0m"
curl $alb_dns
echo -e "\n"

echo -e "\033[32m"---------- 6\-1 ----------"\033[0m"
echo -e "\033[32m"/about이 출력되는지 확인합니다."\033[0m"
aws elbv2 describe-target-groups --names wsi-about-tg --query "TargetGroups[].HealthCheckPath"
echo -e "\033[32m"/projects가 출력되는지 확인합니다."\033[0m"
aws elbv2 describe-target-groups --names wsi-projects-tg --query "TargetGroups[].HealthCheckPath"
echo -e "\n"

echo -e "\033[32m"---------- 6\-2 ----------"\033[0m"
about_tg_arn=`aws elbv2 describe-target-groups --names wsi-about-tg --query "TargetGroups[].TargetGroupArn" --output text`
projects_tg_arn=`aws elbv2 describe-target-groups --names wsi-projects-tg --query "TargetGroups[].TargetGroupArn" --output text`
echo -e "\033[32m"healthy가 출력되는지 확인합니다."\033[0m"
aws elbv2 describe-target-health --target-group-arn  $about_tg_arn --query "TargetHealthDescriptions[].TargetHealth.State"
echo -e "\033[32m"healthy가 출력되는지 확인합니다."\033[0m"
aws elbv2 describe-target-health --target-group-arn  $projects_tg_arn --query "TargetHealthDescriptions[].TargetHealth.State"
echo -e "\n"

echo -e "\033[32m"---------- 6\-3 ----------"\033[0m"
about_tg_arn=`aws elbv2 describe-target-groups --names wsi-about-tg --query "TargetGroups[].TargetGroupArn" --output text`
projects_tg_arn=`aws elbv2 describe-target-groups --names wsi-projects-tg --query "TargetGroups[].TargetGroupArn" --output text`
echo -e "\033[32m"ap-northeast-2a, ap-northeast-2b가 출력되는지 확인합니다."\033[0m"
aws elbv2 describe-target-health --target-group-arn  $about_tg_arn --query "TargetHealthDescriptions[].Target.AvailabilityZone"
echo -e "\033[32m"ap-northeast-2a, ap-northeast-2b가 출력되는지 확인합니다."\033[0m"
aws elbv2 describe-target-health --target-group-arn  $projects_tg_arn --query "TargetHealthDescriptions[].Target.AvailabilityZone"
echo -e "\n"

echo -e "\033[32m"---------- 7\-1 ----------"\033[0m"
echo -e "\033[32m"약 14자리 영문/숫자로 이루어진 ID가 출력되는지 확인합니다."\033[0m"
aws cloudfront list-distributions --query "DistributionList.Items[].Id"
echo -e "\033[32m"wsi-alb로 시작하는 문자열이 출력되는지 확인합니다."\033[0m"
aws cloudfront list-distributions --query "DistributionList.Items[].Origins.Items[].DomainName"
echo -e "\n"

echo -e "\033[32m"---------- 7\-2 ----------"\033[0m"
cloudfront_url=`aws cloudfront list-distributions --query "DistributionList.Items[].DomainName" --output text`
echo -e "\033[32m"The about page가 출력되는지 확인합니다."\033[0m"
curl https://$cloudfront_url/about
echo -e "\n"
echo -e "\033[32m"The projects page가 출력되는지 확인합니다."\033[0m"
curl https://$cloudfront_url/projects
echo -e "\n"

echo -e "\033[32m"---------- 7\-3 ----------"\033[0m"
echo -e "\033[32m"X-Cache: Hit from cloudfront가 출력되는지 확인합니다."\033[0m"
curl -I -s https://$cloudfront_url/about | grep X-Cache
echo -e "\033[32m"X-Cache: Miss from cloudfront가 출력되는지 확인합니다."\033[0m"
curl -I -s https://$cloudfront_url/projects | grep X-Cache
echo -e "\n"

echo -e "\033[32m"---------- 7\-4 ----------"\033[0m"
cloudfront_id=`aws cloudfront list-distributions --query "DistributionList.Items[].Id" --output text`
echo -e "\033[32m"PriceClass_All이 출력되는지 확인합니다."\033[0m"
aws cloudfront get-distribution-config --id $cloudfront_id --query "DistributionConfig.PriceClass"
echo -e "\n"